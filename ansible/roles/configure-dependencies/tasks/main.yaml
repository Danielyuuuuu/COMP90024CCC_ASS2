---
# Install python
- name: Install pip
  become: yes
  apt:
    name: ['python3-pip']
    state: latest
    update_cache: yes

# Update python
- name: Update pip
  become: yes
  pip:
    name: ['pip']
    state: latest

# Install couchdb
- name: Install couchdb
  become: yes
  pip:
    name: ['couchdb']
    state: latest


# Install pandas
- name: Install pandas
  become: yes
  pip:
    name: ['pandas']
    state: latest

# Install numpy
- name: Install numpy
  become: yes
  pip:
    name: ['numpy']
    state: latest

# Install scikit-learn
- name: Install scikit-learn
  become: yes
  pip:
    name: ['scikit-learn']
    state: latest

# Install nltk
- name: Install nltk
  become: yes
  pip:
    name: ['nltk']
    state: latest

# Install gensim
- name: Install gensim
  become: yes
  pip:
    name: ['gensim']
    state: latest

# Install geopandas
- name: Install geopandas
  become: yes
  pip:
    name: ['geopandas']
    state: latest

# Install folium
- name: Install folium
  become: yes
  pip:
    name: ['folium']
    state: latest

# Install tensorflow
- name: Install tensorflow
  become: yes
  pip:
    name: ['tensorflow==2.3.0']
    state: present


- name: Install git
  become: yes
  apt: 
    name: ['git']
    state: latest
    update_cache: yes

- name: Install p7zip
  become: yes
  apt:
    name: ['p7zip-full']
    state: latest
    update_cache: yes

- name: Update and upgrade apt packages
  become: true
  apt:
    upgrade: yes
    update_cache: yes

- name: Set up the repository
  become: yes
  apt:
    name: ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg', 'lsb-release']
    state: latest
    update_cache: yes

- name: Add Docker GPG key
  become: yes
  shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  async: 45
  ignore_errors: yes

- name: Set up the stable repository
  become: yes
  shell: |
    echo \
    "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
    $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null


- name: Update and upgrade apt packages
  become: true
  apt:
    upgrade: yes
    update_cache: yes
    
- name: Install python docker
  become: yes
  pip:  
    name: ['docker']
    state: latest

- name: Install docker
  become: yes
  apt:
    name: ['docker-ce', 'docker-ce-cli', 'containerd.io']
    state: latest
    update_cache: yes

- name: Create docker proxy file
  shell: |
    sudo mkdir -p /etc/systemd/system/docker.service.d
    sudo touch /etc/systemd/system/docker.service.d/http-proxy.conf

- name: Add proxy to the instance
  become: yes
  copy:
    dest: /etc/systemd/system/docker.service.d/http-proxy.conf
    content: |
      [Service]
      Environment="HTTP_PROXY=http://wwwproxy.unimelb.edu.au:8000/"
      Environment="HTTPS_PROXY=http://wwwproxy.unimelb.edu.au:8000/"
      Environment="NO_PROXY=localhost,127.0.0.1,localaddress,172.16.0.0/12,.melbourne.rc.nectar.org.au,.storage.unimelb.edu.au,.cloud.unimelb.edu.au"
      Environment="http_proxy=http://wwwproxy.unimelb.edu.au:8000/"
      Environment="https_proxy=http://wwwproxy.unimelb.edu.au:8000/"

- name: Create another docker proxy file
  shell: |
    sudo mkdir -p /home/ubuntu/.docker
    sudo touch /home/ubuntu/.docker/config.json
    
- name: Add another proxy to the instance
  become: yes
  copy:
    dest: /home/ubuntu/.docker/config.json
    content: |
      {
        "proxies":
        {
          "default":
          {
            "httpProxy": "http://wwwproxy.unimelb.edu.au:8000/",
            "httpsProxy": "http://wwwproxy.unimelb.edu.au:8000/",
            "noProxy": "localhost,127.0.0.1,localaddress,172.16.0.0/12,.melbourne.rc.nectar.org.au,.storage.unimelb.edu.au,.cloud.unimelb.edu.au"
          }
        }
      }

- name: Create the docker group
  become: yes
  shell: sudo groupadd docker
  async: 45
  ignore_errors: yes

- name: Add root to the docker group
  become: yes
  shell: |
    sudo usermod -aG docker root
    sudo usermod -aG docker ubuntu
- name: Activate the changes to groups
  become: yes
  shell: newgrp docker 
  async: 45
  ignore_errors: yes

- name: Stop docker
  become: yes
  shell: sudo systemctl stop docker

- name: Reload docker daemon
  shell: sudo systemctl daemon-reload

- name: Start docker
  become: yes
  shell: sudo systemctl start docker

- name: Run docker hello-world
  become: yes
  shell: sudo docker run hello-world


- name: Install tweepy
  become: yes
  pip:
    name: ['tweepy']
    state: latest

- name: Install shapely
  become: yes
  pip:
    name: ['shapely']
    state: latest

- name: Install jsonlines
  become: yes
  pip:
    name: ['jsonlines']
    state: latest

- name: Install cloudant
  become: yes
  pip:
    name: ['cloudant']
    state: latest
